<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:LogicDiagram3000.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:logicV="clr-namespace:LogicDiagram3000.Views.logicScheme"
		xmlns:conectors="clr-namespace:LogicDiagram3000.Models.Connectors"
		xmlns:chip="clr-namespace:LogicDiagram3000.Models.logicChip"
		xmlns:conv="clr-namespace:LogicDiagram3000.Models.Converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		Width="800" Height="450"
        x:Class="LogicDiagram3000.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="LogicDiagram3000">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
	<Window.Resources>
		<conv:StringToThicknessConverter x:Key="stringToThicknessConverter"/>
	</Window.Resources>
	<Grid RowDefinitions="0.1*,*" Height="{Binding $parent[Window].Height}" ShowGridLines="True"	>
		<Grid Width="{Binding $parent[Window].Width}" Grid.Row="0" ColumnDefinitions="*,*,*,*,*,*,*">
			<Menu Grid.Column="0">
				<MenuItem Header="Меню">
					<MenuItem Header="Создать"/>
					<MenuItem Header="Открыть"/>
					<MenuItem Header="Сохранить"/>
					<MenuItem Header="Выйти"/>
				</MenuItem>
			</Menu>
			<Image Grid.Column="1" HorizontalAlignment="Left" Source="/Assets/Image/And.png"/>
			<Image Grid.Column="2" HorizontalAlignment="Left" Source="/Assets/Image/Or.png"/>
			<Image Grid.Column="3" HorizontalAlignment="Left" Source="/Assets/Image/Not.png"/>
			<Image Grid.Column="4" HorizontalAlignment="Left" Source="/Assets/Image/Xor.png"/>
			<Image Grid.Column="5" HorizontalAlignment="Left" Source="/Assets/Image/Demultiplexer.png"/>
		</Grid>
		<Grid Width="{Binding $parent[Window].Width}" Grid.Row="1" ColumnDefinitions="0.2*,*,0.2*">
			<ItemsControl Grid.Column="1"
						  Items="{Binding CanvasList}"
						  HorizontalAlignment="Stretch"
						  VerticalAlignment="Stretch"
						  PointerPressed="PointerPressedOnCanvas">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas Name="canvas" Height="{Binding $parent[ItemsControl].Height}" Width="{Binding $parent[ItemsControl].Width}" Background="Aqua"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.DataTemplates>
					<DataTemplate DataType="{x:Type chip:AndChip}">
						<logicV:AndChipView Margin="{Binding Margin, Converter={StaticResource stringToThicknessConverter}}"/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type chip:OrChip}">
						<logicV:OrChipView Margin="{Binding Margin, Converter={StaticResource stringToThicknessConverter}}"/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type chip:NotChip}">
						<logicV:NotChipView Margin="{Binding Margin, Converter={StaticResource stringToThicknessConverter}}"/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type chip:XorChip}">
						<logicV:XorChipView Margin="{Binding Margin, Converter={StaticResource stringToThicknessConverter}}"/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type chip:DemultiplexerChip}">
						<logicV:DemultiplexerChipView Margin="{Binding Margin, Converter={StaticResource stringToThicknessConverter}}"/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type conectors:Connector}">
						<Line StartPoint="{Binding StartPoint}"
							  EndPoint="{Binding EndPoint}"
							  StrokeThickness="3"
							  Stroke="Yellow"/>
					</DataTemplate>
				</ItemsControl.DataTemplates>
			</ItemsControl>
			
			<ListBox Grid.Column="2" Items="{Binding CanvasList}">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding TupeChip}"/>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</Grid>
	</Grid>

</Window>
